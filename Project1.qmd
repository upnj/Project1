---
title: "Project1"
author: "Upendra Joshi & John Tuong"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

-   DRAFT

# ST: 558, Project 1

### By Upendra Joshi & John Tuong

## Introduction

-     Project 1 focuses on creating functions to query an API and process, manipulate, summarize and display data from the Public Use Microdata Sample Census.

-     The Public Use Microdata Sample (PUMS) Census API is a collection of data files from the United States Census Buerau that provides access to a sample of the US population and housing units. This data is compiled from responses to the American Community Survey (ACS). The PUMS is comprised of two files: one for person records and the other for housing unit records. Specifically, it includes geographic and household information including, but not limited to: family type, household income, race, gender, etc. The purpose of this data is to help the research community to better understand the characteristics of households receiving assistance. In order to effectively use this data, the PUMS' API (Application Programming Interface) must be queried to be viewed and manipulated in RStudio.

```{r}
install.packages("tidyverse")
install.packages("httr") #installed for get function
install.packages("jsonlite") 
install.packages("dplyr")
install.packages("tidycensus")

library(tidyverse)
library(httr)
library(jsonlite)
library(dplyr)
library(tidycensus)
```

```{r}
#Creating base URL
base_url <- paste0("https://api.census.gov/data/2022/acs/acs1/pums?get=SEX,PWGTP")
response <- GET(url = base_url) #Making a get rest API call
data <- content(response, as = "parsed", type = "application/json")

data_as_tibble <- as_tibble(data)
```

```{r}
#Created helper function in order to query API

api_query <- function(year = 2022, state = "*", get = "AGEP,SEX", get_always = "PWGTP,") {
  if (year > 2022 | year < 2010) {
    print("Invalid year value. Please type in a number between 2010 and 2022")
  }
    base_url <- paste0("https://api.census.gov/data/",year,"/acs/acs1/pums?get=",get_always,get,"&for=state:",state) #Concatenating
  response <- GET(url = base_url) #Making a get rest API call
parsed <- fromJSON(rawToChar(response$content))
data_as_tibble <- as_tibble(parsed)
data_as_tibble <- data_as_tibble %>% 
  rename(PWGTP = V1,
         AGEP = V2,
         state = V3) %>%
  slice(-1) %>%
  mutate(AGEP = as.integer(AGEP),
       PWGTP = as.integer(PWGTP)) 
return(data_as_tibble)
}
```


```{r}
api_query(get = "AGEP", year = 2015)
```







```{r}
api_query(2021, "04", "SEX,PWGTP,AGEP")

```













## PART I Obtaining the Data from PUMS API

### API Function

## PART II Summarizing the Data and Plots

### Summary Function

-   In this section we have created 2 functions "Summary" function takes the data from tibble and generate summary statistics (mean and standard deviation) for all numeric variables and counts for all categorical variables from the data frame. This function takes three arguments - class census, numeric variables to generate summary statistics and categorical variables.

### Plot Function

-   
